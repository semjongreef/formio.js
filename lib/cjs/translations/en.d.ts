declare const _default: {
    unsavedRowsError: string;
    invalidRowsError: string;
    invalidRowError: string;
    invalidOption: string;
    invalidDay: string;
    alertMessageWithLabel: string;
    alertMessage: string;
    complete: string;
    error: string;
    errorListHotkey: string;
    errorsListNavigationMessage: string;
    submitError: string;
    required: string;
    unique: string;
    array: string;
    array_nonempty: string;
    nonarray: string;
    select: string;
    pattern: string;
    minLength: string;
    maxLength: string;
    minWords: string;
    maxWords: string;
    min: string;
    max: string;
    maxDate: string;
    minDate: string;
    maxYear: string;
    minYear: string;
    minSelectedCount: string;
    maxSelectedCount: string;
    invalid_email: string;
    invalid_url: string;
    invalid_regex: string;
    invalid_date: string;
    invalid_day: string;
    invalidValueProperty: string;
    mask: string;
    valueIsNotAvailable: string;
    stripe: string;
    month: string;
    day: string;
    year: string;
    january: string;
    february: string;
    march: string;
    april: string;
    may: string;
    june: string;
    july: string;
    august: string;
    september: string;
    october: string;
    november: string;
    december: string;
    next: string;
    previous: string;
    cancel: string;
    submit: string;
    confirmCancel: string;
    saveDraftInstanceError: string;
    saveDraftAuthError: string;
    restoreDraftInstanceError: string;
    saveDraftError: string;
    restoreDraftError: string;
    time: string;
    cancelButtonAriaLabel: string;
    previousButtonAriaLabel: string;
    nextButtonAriaLabel: string;
    submitButtonAriaLabel: string;
    reCaptchaTokenValidationError: string;
    reCaptchaTokenNotSpecifiedError: string;
    apiKey: string;
    typeRemaining: string;
    typeCount: string;
    requiredDayField: string;
    requiredDayEmpty: string;
    requiredMonthField: string;
    requiredYearField: string;
    formNotReady: string;
    noFormElement: string;
    notUniqueKey: string;
    newFormSchema: string;
    missingUrl: string;
    urlNotAttachedToBtn: string;
    loadingProjectSettingsError: string;
    sessionStorageSupportError: string;
    builderUniqueError: string;
    pageNotFound: string;
    noDragInfoError: string;
    addonSupportTypeError: string;
    setPathError: string;
    calculatedPathDeprecation: string;
    unknownTemplate: string;
    unknownComponent: string;
    renderTemplateFunctionDeprecation: string;
    whenReadyDeprecation: string;
    loadResourcesError: string;
    noSelectDataConfiguration: string;
    indexedDBSupportError: string;
    caretPositionSavingError: string;
    iteratableRowsError: string;
    checkRowDeprecation: string;
    noOAuthBtn: string;
    noOAuthConfiguration: string;
    oAuthErrorsTitle: string;
    noOAuthFormUrl: string;
    oAuthStateError: string;
    componentInvalidRowValidation: string;
    videoPlayerNotFound: string;
    synchronizationFailed: string;
    fileWithDuplicatedNameInProgress: string;
    fileWithDuplicatedNameLoaded: string;
    nestedForm: string;
    noDataProvided: string;
    subformSubmissionLoadingError: string;
    noDelimiterSet: string;
    noSiteKey: string;
    failedToNormalize: string;
    failedToCompareItems: string;
    editorFocusError: string;
    quillImageUploadFailed: string;
    noFilesSelected: string;
    needConfigurationForQuill: string;
    waitPdfConverting: string;
    uploading: string;
    pasteBelow: string;
    copy: string;
    move: string;
    edit: string;
    editJson: string;
    remove: string;
    clickToSetValue: string;
    words: string;
    characters: string;
    addAnother: string;
    yes: string;
    no: string;
    wantToClearData: string;
    yesDelete: string;
    waitFileProcessing: string;
    wrongFileType: string;
    fileTooSmall: string;
    fileTooBig: string;
    noFileService: string;
    fileProcessingFailed: string;
    readyForUpload: string;
    readyForRemovingFromStorage: string;
    preparingFileToRemove: string;
    succefullyRemoved: string;
    succefullyUploaded: string;
    maxSelectItems: string;
    minSelectItems: string;
    clickToSign: string;
    surveyQuestion: string;
    surveyQuestionValue: string;
    success: string;
    noResultsFound: string;
    noChoices: string;
    typeToSearch: string;
    loading: string;
    help: string;
    component: string;
    save: string;
    preview: string;
    dragAndDropComponent: string;
    searchFields: string;
    noMatchesFound: string;
    fileName: string;
    size: string;
    type: string;
    gallery: string;
    camera: string;
    dropFilesToAttach: string;
    useCamera: string;
    browse: string;
    takePicture: string;
    switchToFileUpload: string;
    completeStatus: string;
    noStorageSet: string;
    noFileApiSupport: string;
    noFormDataSupport: string;
    noProgressSupport: string;
    close: string;
    addResource: string;
    autocomplete: string;
    showPreview: string;
    hidePreview: string;
    createPage: string;
    page: string;
    closeBtnDescription: string;
    cancelBtnDescription: string;
    saveBtnDescription: string;
    addOrRemove: string;
    anyFileTypesAllowed: string;
    allowedFileTypes: string;
    syncing: string;
    syncNow: string;
    pressToOpen: string;
    browseToAttachFileFor: string;
    or: string;
    numericOnly: string;
    uploadPdfFile: string;
    dropToStart: string;
    expand: string;
    collapse: string;
    add: string;
    delete: string;
    revert: string;
    removeBtnPressToRemove: string;
    file: string;
    captureVideo: string;
    captureAudio: string;
    captureImage: string;
    browseFiles: string;
    noComponentsSetInGrid: string;
    sortAscending: string;
    sortDescending: string;
    filter: string;
    clear: string;
    showItemsWithValue: string;
    gridItemsPerPage: string;
    gridAllItems: string;
    recordsSelectedOnPage: string;
    recordsSelectedInTable: string;
    gridSelectAll: string;
    itemsInTable: string;
    clearSelection: string;
    editGridRow: string;
    deleteGridRow: string;
    selected: string;
    actions: string;
};
export default _default;
